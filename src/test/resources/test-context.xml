<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:facebook="http://www.springframework.org/schema/social/facebook"
	xmlns:thmb="http://www.prime.in.th/schema/web/thumbnailator"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task-4.2.xsd
       http://www.springframework.org/schema/cache 
       http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
       http://www.springframework.org/schema/websocket
       http://www.springframework.org/schema/websocket/spring-websocket-4.2.xsd
       http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
       http://www.prime.in.th/schema/web/thumbnailator
       http://www.prime.in.th/schema/web/thumbnailator.xsd
       ">

<!-- 	<cache:annotation-driven />

	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehcache" />
	</bean>
	<bean id="ehcache"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
	</bean> -->
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="location">
				<value>classpath:test.properties</value>
			</property>
		</bean>
		
		
	<task:annotation-driven executor="taskExecutor" />
	<task:scheduler id="taskScheduler" pool-size="10" />
	<task:executor id="taskExecutor" pool-size="5" 	queue-capacity="10" />

	<!-- <context:component-scan base-package="io.prime">
		 <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		 <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan> -->
	
	<!-- <context:annotation-config />
	<context:spring-configured /> -->

	<!-- <context:load-time-weaver aspectj-weaving="on" weaver-class="org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver" 
		/> -->
		
	<thmb:web-thumbnailer source-image-directory="src/test/resources/assets/img-src" filtered-image-directory="src/test/resources/assets/img-filtered" base-url="/image" />
	
	<bean class="io.prime.web.thumbnailator.bean.ThumbnailatorFilterSource">
		<property name="filters">
			<map>
				<entry key="default"><null /></entry>
			</map>
		</property>
	</bean>
	
	
	<jdbc:embedded-database id="dataSource" type="H2"></jdbc:embedded-database>	
	
	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="${jpa.showSql}" />
		<property name="database" value="${jdbc.database}" />
	</bean>
	

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="packagesToScan" value="" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.physical_naming_strategy">com.prime.web.thumbnailer.test.assets.HibernatePhysicalNamingStrategyImpl</prop>
				<prop key="hibernate.archive.autodetection">class</prop>
				<prop key="javax.persistence.validation.mode">NONE</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
			</props>
		</property>
	</bean>
<!-- 	<bean id="interceptor" class="com.krungsri.auth.mobile.console.event.listener.AuditInterceptor" depends-on="entityManagerFactory"/> -->
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" mode="proxy" proxy-target-class="false" />

	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	
</beans>